import Button from 'components/common/Button';
import { DISCORD_URL } from 'lib/constants';
import { useTranslations } from 'next-intl';
import dynamic from 'next/dynamic';
import { ReactNode } from 'react';

// Lazy load the ModalWithButton component
const LazyLoadModalWithButton = dynamic(() => import('components/common/ModalWithButton'), {
  ssr: false,
});

const ReportExploitButton = () => {
  const t = useTranslations();

  const options = [
    {
      title: t('exploits.report_exploit.project_hack.title'),
      description: t('exploits.report_exploit.project_hack.description'),
      button: (
        <Button style="secondary" size="md" href={DISCORD_URL} external>
          {t('exploits.report_exploit.report_on', { platform: 'Discord' })}
        </Button>
      ),
    },
    {
      title: t('exploits.report_exploit.phishing_website.title'),
      description: t('exploits.report_exploit.phishing_website.description'),
      button: (
        <>
          <Button style="secondary" size="md" href="https://scamfari.com" external>
            {t('exploits.report_exploit.report_on', { platform: 'Scamfari' })}
          </Button>
          <Button style="secondary" size="md" href="https://www.chainabuse.com/" external>
            {t('exploits.report_exploit.report_on', { platform: 'Chainabuse' })}
          </Button>
        </>
      ),
    },
  ];

  return (
    <LazyLoadModalWithButton
      className="sm:max-w-lg"
      button={
        <Button style="primary" size="md">
          {t('common.buttons.report_exploit')}
        </Button>
      }
    >
      <div className="sm:flex sm:items-start">
        <div className="w-full flex flex-col gap-2 pb-2">
          <h2 className="text-center text-2xl">{t('exploits.report_exploit.title')}</h2>

          <div className="w-full flex flex-col gap-4">
            {/* remove hardcoded configurations, you can define them using the `config` object.*/}
            {options.map((option, index) => (
              <ReportExploitOption key={index} {...option} />
            ))}
          </div>
        </div>
      </div>
    </LazyLoadModalWithButton>
  );
};

interface ReportExploitOptionProps {
  title: string;
  description: ReactNode;
  button: ReactNode;
}

// suggest moving this component outside the file if it is going to be reused.
const ReportExploitOption = ({ title, description, button }: ReportExploitOptionProps) => {
  return (
    <div className="w-full flex flex-col gap-2">
      <div>
        <h3 className="text-xl">{title}</h3>
        <p className="text-sm">{description}</p>
      </div>
      {button}
    </div>
  );
};

export default ReportExploitButton;
