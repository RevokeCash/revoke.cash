import { useAddressAllowances, useAddressPageContext } from 'lib/hooks/page-context/AddressPageContext';
import { Exploit, isAffectedByExploit } from 'lib/utils/allowance-exploit-list';
import ExploitStatus from './ExploitStatus';

const ExploitChecker = (props: { exploit: Exploit }) => {
  const { address, selectedChainId } = useAddressPageContext();
  const { allowances, isLoading } = useAddressAllowances();

  if (!address || !selectedChainId) {
    return null;
  }

  if (isLoading || !allowances) {
    return (
      <div className="animate-pulse bg-zinc-300 dark:bg-zinc-700 rounded-lg">
        {/* Add a placeholder ExploitStatus so the height won't change */}
        <div className="invisible">
          <ExploitStatus status="safe" exploit={props.exploit} address={address} chainId={selectedChainId} />
        </div>
      </div>
    );
  }

  const status = isAffectedByExploit(allowances, props.exploit) ? 'affected' : 'safe';

  return <ExploitStatus status={status} exploit={props.exploit} address={address} chainId={selectedChainId} />;
};

export default ExploitChecker;
