import { CheckCircleIcon, ExclamationTriangleIcon } from '@heroicons/react/24/outline';
import Button from 'components/common/Button';
import { shortenAddress } from 'lib/utils';
import { Exploit } from 'lib/utils/allowance-exploits-list';
import Link from 'next/link';

type Props = {
  address: string;
  chainId: number;
  exploit: Exploit;
};

const HappyResult = (props: Props) => {
  return (
    <div className="rounded-md bg-gray-50 border border-black p-4 ">
      <div className="flex items-center gap-8 justify-between">
        <div className="flex-shrink-0">
          <CheckCircleIcon className="h-12 text-black" aria-hidden="true" />
        </div>
        <div className="ml-3 flex-1">
          <h3 className="text-sm font-bold text-gray-800">Happy days</h3>
          <div className="mt-2 text-sm text-gray-700">
            <p>
              Your address {shortenAddress(props.address)} is not vulnerable to this exploit. Have look at all your
              allowances while you are here.
            </p>
          </div>
        </div>
        <Button size="md" style="secondary">
          View allowances
        </Button>
      </div>
    </div>
  );
};

const SadResult = (props: Props) => {
  return (
    <div className="rounded-md bg-gray-50 border border-black p-4 ">
      <div className="flex items-center gap-8 justify-between">
        <div className="flex-shrink-0">
          <ExclamationTriangleIcon className="h-12 text-black" aria-hidden="true" />
        </div>
        <div className="ml-3 flex-1">
          <h3 className="text-sm font-bold text-gray-800">Attention needed</h3>
          <div className="mt-2 text-sm text-gray-700">
            <p>
              Your address {shortenAddress(props.address)} is vulnerable to this exploit. We recommend you to revoke the
              allowance for this address.
            </p>
          </div>
        </div>
        <Link
          href={`/address/${props.address}?chainId=${props.chainId}&spenderSearch=${
            props.exploit.addresses.find((address) => address.chainId === props.chainId).address
          }`}
        >
          <Button size="md" style="secondary">
            Revoke allowance
          </Button>
        </Link>
      </div>
    </div>
  );
};

export const ExploitStatus = (props: Props & { happy: boolean }) => {
  return props.happy ? <HappyResult {...props} /> : <SadResult {...props} />;
};

export default ExploitStatus;
