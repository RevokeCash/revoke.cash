import fs from 'fs/promises';
import path from 'path';

export type Exploit = {
  slug: string;
  name: string;
  description: string;
  date: string;
  addresses: {
    chainId: number;
    address: string;
  }[];
  metaArticleUrls: string[];
};

const listFiles = async (dir: string): Promise<string[]> => {
  const files = await fs.readdir(dir);

  return files;
};

const loadFile = async (file: string): Promise<Exploit> => {
  const data = await fs.readFile(file, 'utf-8');

  const exploit = JSON.parse(data);

  return exploit;
};

export const getAllExploits = async (): Promise<Exploit[]> => {
  const fileNames = await listFiles('./lib/data/exploits');

  const exploits = [];

  for (const fileName of fileNames) {
    const exploit = await loadFile(path.join('./lib/data/exploits', fileName));

    exploit.slug = fileName.replace('.json', '');

    exploits.push(exploit);
  }

  console.log('Filenames', fileNames);

  return exploits;
};

export const getExploitBySlug = async (slug: string): Promise<Exploit> => {
  const fileName = `${slug}.json`;
  const filePath = path.join('./lib/data/exploits', fileName);

  const exploit = await loadFile(filePath);
  exploit.slug = fileName.replace('.json', '');

  return exploit;
};
